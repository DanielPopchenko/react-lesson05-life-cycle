{"ast":null,"code":"var _jsxFileName = \"/Users/danielpopchenko/Desktop/react-lesson05-life-cycle/src/Feedbacks.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport FeedbackList from './components/LeaveFeedback/FeedbackList';\nimport Statistics from './components/LeaveFeedback/Statistics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feedbacks() {\n  _s();\n  const [goodFeedback, setGoodFeedback] = useState(0);\n  const [neutralFeedback, setNeutralFeedback] = useState(0);\n  const [badFeedback, setBadFeedback] = useState(0);\n  const [total, setTotal] = useState(0);\n  const handleBtnClick = e => {\n    const name = e.target.name;\n    switch (name) {\n      case 'good':\n        setGoodFeedback(goodFeedback => goodFeedback += 1);\n        break;\n      case 'neutral':\n        setNeutralFeedback(neutralFeedback => neutralFeedback += 1);\n        break;\n      case 'bad':\n        setBadFeedback(badFeedback => badFeedback += 1);\n        break;\n      default:\n        return;\n    }\n  };\n  useEffect(() => {\n    function countTotalFeedbacks() {\n      return goodFeedback + neutralFeedback + badFeedback;\n    }\n    setTotal(countTotalFeedbacks());\n  }, [goodFeedback, neutralFeedback, badFeedback, total]);\n  const countPositiveFeedbacks = () => {\n    return Math.floor(goodFeedback * 100 / total) + '%';\n  };\n  const positiveFeedbacks = countPositiveFeedbacks();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FeedbackList, {\n      onBtnClick: handleBtnClick,\n      feedbacks: (goodFeedback, neutralFeedback, badFeedback)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: badFeedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total feedbacks: \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), total > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Positive feedbacks: \", positiveFeedbacks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n// class OldFeedbacks extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   increaseValue = (name) => {\n//     this.setState((prevState) => {\n//       return {\n//         [name]: prevState[name] + 1,\n//       };\n//     });\n//   };\n\n//   countTotalFeedbacks = () => {\n//     return Object.values(this.state).reduce((acc, val) => acc + val, 0);\n//   };\n\n//   countPositiveFeedbacks = () => {\n//     const total = this.countTotalFeedbacks();\n//     const good = this.state.good;\n\n//     return Math.floor((good * 100) / total) + '%';\n//   };\n\n//   render() {\n//     const feedbacks = this.state;\n//     const state = this.state;\n\n//     return (\n//       <section>\n//         <h1>Homework</h1>\n//         <FeedbackList feedbacks={feedbacks} onIncreaseValue={increaseValue} />\n//         <Statistics\n//           good={state.good}\n//           neutral={state.neutral}\n//           bad={state.bad}\n//           totalFeedbacks={this.countTotalFeedbacks()}\n//           positiveFeedbacks={this.countPositiveFeedbacks()}\n//         />\n//       </section>\n//     );\n//   }\n// }\n_s(Feedbacks, \"mQHCZofPpYpoocTMlS8kzmLScQU=\");\n_c = Feedbacks;\nvar _c;\n$RefreshReg$(_c, \"Feedbacks\");","map":{"version":3,"names":["React","Component","useEffect","useState","FeedbackList","Statistics","jsxDEV","_jsxDEV","Feedbacks","_s","goodFeedback","setGoodFeedback","neutralFeedback","setNeutralFeedback","badFeedback","setBadFeedback","total","setTotal","handleBtnClick","e","name","target","countTotalFeedbacks","countPositiveFeedbacks","Math","floor","positiveFeedbacks","children","onBtnClick","feedbacks","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/danielpopchenko/Desktop/react-lesson05-life-cycle/src/Feedbacks.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport FeedbackList from './components/LeaveFeedback/FeedbackList';\nimport Statistics from './components/LeaveFeedback/Statistics';\n\nexport default function Feedbacks() {\n  const [goodFeedback, setGoodFeedback] = useState(0);\n  const [neutralFeedback, setNeutralFeedback] = useState(0);\n  const [badFeedback, setBadFeedback] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  const handleBtnClick = (e) => {\n    const name = e.target.name;\n\n    switch (name) {\n      case 'good':\n        setGoodFeedback((goodFeedback) => (goodFeedback += 1));\n        break;\n      case 'neutral':\n        setNeutralFeedback((neutralFeedback) => (neutralFeedback += 1));\n        break;\n      case 'bad':\n        setBadFeedback((badFeedback) => (badFeedback += 1));\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    function countTotalFeedbacks() {\n      return goodFeedback + neutralFeedback + badFeedback;\n    }\n\n    setTotal(countTotalFeedbacks());\n  }, [goodFeedback, neutralFeedback, badFeedback, total]);\n\n  const countPositiveFeedbacks = () => {\n    return Math.floor((goodFeedback * 100) / total) + '%';\n  };\n\n  const positiveFeedbacks = countPositiveFeedbacks();\n  return (\n    <div>\n      <FeedbackList\n        onBtnClick={handleBtnClick}\n        feedbacks={(goodFeedback, neutralFeedback, badFeedback)}\n      />\n      <p>{badFeedback}</p>\n      <p>Total feedbacks: {total}</p>\n      {total > 0 && <p>Positive feedbacks: {positiveFeedbacks}</p>}\n    </div>\n  );\n}\n\n// class OldFeedbacks extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   increaseValue = (name) => {\n//     this.setState((prevState) => {\n//       return {\n//         [name]: prevState[name] + 1,\n//       };\n//     });\n//   };\n\n//   countTotalFeedbacks = () => {\n//     return Object.values(this.state).reduce((acc, val) => acc + val, 0);\n//   };\n\n//   countPositiveFeedbacks = () => {\n//     const total = this.countTotalFeedbacks();\n//     const good = this.state.good;\n\n//     return Math.floor((good * 100) / total) + '%';\n//   };\n\n//   render() {\n//     const feedbacks = this.state;\n//     const state = this.state;\n\n//     return (\n//       <section>\n//         <h1>Homework</h1>\n//         <FeedbackList feedbacks={feedbacks} onIncreaseValue={increaseValue} />\n//         <Statistics\n//           good={state.good}\n//           neutral={state.neutral}\n//           bad={state.bad}\n//           totalFeedbacks={this.countTotalFeedbacks()}\n//           positiveFeedbacks={this.countPositiveFeedbacks()}\n//         />\n//       </section>\n//     );\n//   }\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}