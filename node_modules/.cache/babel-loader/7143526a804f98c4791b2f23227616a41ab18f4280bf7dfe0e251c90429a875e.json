{"ast":null,"code":"var _jsxFileName = \"/Users/danielpopchenko/Desktop/react-lesson05-life-cycle/src/PhoneBook.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport uniqid from 'uniqid';\nimport FilterContacts from './components/PhoneContacts/FilterContacts';\nimport ContactsForm from './components/PhoneContacts/ContactsForm';\nimport ContactsList from './components/PhoneContacts/ContactsList';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport '@pnotify/core/dist/PNotify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PhoneBook() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    console.log('Сетим контакт в LS');\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n  useEffect(() => {}, []);\n  const changeFilter = filter => {\n    // const { contacts } = this.state;\n    setFilter(filter);\n\n    // contacts.map((contact) => {\n    //   if (contact.name === filter) {\n    //     alert(\"This contact is already in your list\");\n    //   }\n    // });\n  };\n\n  const addContact = (name, number) => {\n    const contact = {\n      name,\n      number,\n      id: uniqid()\n    };\n    if (filter === name) {\n      alert('This contact is already in your list');\n    }\n    setContacts(prev => [...prev, contact]);\n  };\n  const deleteContact = contactId => {\n    setContacts(prev => {\n      return {\n        contacts: prev.filter(contact => {\n          if (contact.id !== contactId) {\n            return contact;\n          }\n        })\n      };\n    });\n  };\n  const getVisibleContacts = () => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n  const visibleContacts = getVisibleContacts();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Telephone book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactsForm, {\n      contacts: visibleContacts,\n      onAddContact: addContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterContacts, {\n      filter: filter,\n      onChangeFilter: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), visibleContacts.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No contact in your contact-book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 40\n    }, this), visibleContacts.length > 0 && /*#__PURE__*/_jsxDEV(ContactsList, {\n      contacts: visibleContacts,\n      onDeleteContact: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n// class OldPhoneBook extends Component {\n//   state = {\n//     contacts: [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   };\n\n//   changeFilter = (filter) => {\n//     // const { contacts } = this.state;\n//     this.setState({ filter });\n\n//     // contacts.map((contact) => {\n//     //   if (contact.name === filter) {\n//     //     alert(\"This contact is already in your list\");\n//     //   }\n//     // });\n//   };\n\n//   addContact = (name, number) => {\n//     const contact = {\n//       name,\n//       number,\n//       id: uniqid(),\n//     };\n\n//     if (this.state.filter === name) {\n//       alert('This contact is already in your list');\n//     }\n\n//     this.setState((prevState) => {\n//       return {\n//         contacts: [...prevState.contacts, contact],\n//       };\n//     });\n//   };\n\n//   deleteContact = (contactId) => {\n//     this.setState((prevState) => {\n//       return {\n//         contacts: prevState.contacts.filter((contact) => {\n//           if (contact.id !== contactId) {\n//             return contact;\n//           }\n//         }),\n//       };\n//     });\n//   };\n\n//   getVisibleContacts = () => {\n//     const { contacts, filter } = this.state;\n\n//     return contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase()),\n//     );\n//   };\n\n//   render() {\n//     const { filter } = this.state;\n\n//     const visibleContacts = this.getVisibleContacts();\n\n//     return (\n//       <section>\n//         <h1>Telephone book</h1>\n\n//         <ContactsForm contacts={visibleContacts} onAddContact={this.addContact} />\n\n//         <FilterContacts filter={filter} onChangeFilter={this.changeFilter} />\n\n//         <h2>Contacts:</h2>\n//         {visibleContacts.length === 0 && <h2>No contact in your contact-book</h2>}\n//         {visibleContacts.length > 0 && (\n//           <ContactsList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\n//         )}\n//       </section>\n//     );\n//   }\n// }\n_s(PhoneBook, \"egG9UneZTJXjVaFcP/nudS6P+io=\");\n_c = PhoneBook;\nvar _c;\n$RefreshReg$(_c, \"PhoneBook\");","map":{"version":3,"names":["useState","useEffect","uniqid","FilterContacts","ContactsForm","ContactsList","jsxDEV","_jsxDEV","PhoneBook","_s","contacts","setContacts","filter","setFilter","console","log","window","localStorage","setItem","JSON","stringify","changeFilter","addContact","name","number","contact","id","alert","prev","deleteContact","contactId","getVisibleContacts","toLowerCase","includes","visibleContacts","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddContact","onChangeFilter","length","onDeleteContact","_c","$RefreshReg$"],"sources":["/Users/danielpopchenko/Desktop/react-lesson05-life-cycle/src/PhoneBook.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport uniqid from 'uniqid';\n\nimport FilterContacts from './components/PhoneContacts/FilterContacts';\nimport ContactsForm from './components/PhoneContacts/ContactsForm';\nimport ContactsList from './components/PhoneContacts/ContactsList';\n\nimport '@pnotify/core/dist/BrightTheme.css';\nimport '@pnotify/core/dist/PNotify.css';\n\nexport default function PhoneBook() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    console.log('Сетим контакт в LS');\n\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  useEffect(() => {}, []);\n\n  const changeFilter = (filter) => {\n    // const { contacts } = this.state;\n    setFilter(filter);\n\n    // contacts.map((contact) => {\n    //   if (contact.name === filter) {\n    //     alert(\"This contact is already in your list\");\n    //   }\n    // });\n  };\n\n  const addContact = (name, number) => {\n    const contact = {\n      name,\n      number,\n      id: uniqid(),\n    };\n\n    if (filter === name) {\n      alert('This contact is already in your list');\n    }\n\n    setContacts((prev) => [...prev, contact]);\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((prev) => {\n      return {\n        contacts: prev.filter((contact) => {\n          if (contact.id !== contactId) {\n            return contact;\n          }\n        }),\n      };\n    });\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <section>\n      <h1>Telephone book</h1>\n\n      <ContactsForm contacts={visibleContacts} onAddContact={addContact} />\n\n      <FilterContacts filter={filter} onChangeFilter={changeFilter} />\n\n      <h2>Contacts:</h2>\n      {visibleContacts.length === 0 && <h2>No contact in your contact-book</h2>}\n      {visibleContacts.length > 0 && (\n        <ContactsList contacts={visibleContacts} onDeleteContact={deleteContact} />\n      )}\n    </section>\n  );\n}\n\n// class OldPhoneBook extends Component {\n//   state = {\n//     contacts: [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   };\n\n//   changeFilter = (filter) => {\n//     // const { contacts } = this.state;\n//     this.setState({ filter });\n\n//     // contacts.map((contact) => {\n//     //   if (contact.name === filter) {\n//     //     alert(\"This contact is already in your list\");\n//     //   }\n//     // });\n//   };\n\n//   addContact = (name, number) => {\n//     const contact = {\n//       name,\n//       number,\n//       id: uniqid(),\n//     };\n\n//     if (this.state.filter === name) {\n//       alert('This contact is already in your list');\n//     }\n\n//     this.setState((prevState) => {\n//       return {\n//         contacts: [...prevState.contacts, contact],\n//       };\n//     });\n//   };\n\n//   deleteContact = (contactId) => {\n//     this.setState((prevState) => {\n//       return {\n//         contacts: prevState.contacts.filter((contact) => {\n//           if (contact.id !== contactId) {\n//             return contact;\n//           }\n//         }),\n//       };\n//     });\n//   };\n\n//   getVisibleContacts = () => {\n//     const { contacts, filter } = this.state;\n\n//     return contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase()),\n//     );\n//   };\n\n//   render() {\n//     const { filter } = this.state;\n\n//     const visibleContacts = this.getVisibleContacts();\n\n//     return (\n//       <section>\n//         <h1>Telephone book</h1>\n\n//         <ContactsForm contacts={visibleContacts} onAddContact={this.addContact} />\n\n//         <FilterContacts filter={filter} onChangeFilter={this.changeFilter} />\n\n//         <h2>Contacts:</h2>\n//         {visibleContacts.length === 0 && <h2>No contact in your contact-book</h2>}\n//         {visibleContacts.length > 0 && (\n//           <ContactsList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\n//         )}\n//       </section>\n//     );\n//   }\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}