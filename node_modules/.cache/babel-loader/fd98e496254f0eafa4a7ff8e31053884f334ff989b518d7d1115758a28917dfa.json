{"ast":null,"code":"var _jsxFileName = \"/Users/danielpopchenko/Desktop/react-lesson05-life-cycle/src/components/Modal/Modal.js\";\nimport React, { Component } from \"react\";\nimport \"./Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Modal extends Component {\n  constructor() {\n    super(...arguments);\n    this.handleKeyDown = e => {\n      if (e.code === \"Escape\") {\n        console.log(\"Закрываем модалку\");\n        this.props.onClose();\n      }\n    };\n  }\n  componentDidMount() {\n    // ! Букдет вызываться после каждого открытия модалки\n    console.log(\"Modal componentDidMount\");\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n    // событие keypress не отслеживает классические клавиши\n    // событие keydown отслеживает все клавиши\n  }\n\n  componentWillUnmount() {\n    console.log(\"Modal componentWillUnmount\");\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ModalOverlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Modal\",\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Modal","constructor","arguments","handleKeyDown","e","code","console","log","props","onClose","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/danielpopchenko/Desktop/react-lesson05-life-cycle/src/components/Modal/Modal.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"./Modal.css\";\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    // ! Букдет вызываться после каждого открытия модалки\n    console.log(\"Modal componentDidMount\");\n\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n    // событие keypress не отслеживает классические клавиши\n    // событие keydown отслеживает все клавиши\n  }\n\n  componentWillUnmount() {\n    console.log(\"Modal componentWillUnmount\");\n\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      console.log(\"Закрываем модалку\");\n\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"ModalOverlay\">\n        {/* \n            Делаем this.props.children для переиспользуемости компонента\n            оформление одно и тоже, меняется только контент\n        */}\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,MAAMC,KAAK,SAASH,SAAS,CAAC;EAAAI,YAAA;IAAA,SAAAC,SAAA;IAAA,KAgB3CC,aAAa,GAAIC,CAAC,IAAK;MACrB,IAAIA,CAAC,CAACC,IAAI,KAAK,QAAQ,EAAE;QACvBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAEhC,IAAI,CAACC,KAAK,CAACC,OAAO,EAAE;MACtB;IACF,CAAC;EAAA;EArBDC,iBAAiBA,CAAA,EAAG;IAClB;IACAJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IAEtCI,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACT,aAAa,CAAC;IACtD;IACA;EACF;;EAEAU,oBAAoBA,CAAA,EAAG;IACrBP,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAEzCI,MAAM,CAACG,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACX,aAAa,CAAC;EAC3D;EAUAY,MAAMA,CAAA,EAAG;IACP,oBACEhB,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,eAK3BlB,OAAA;QAAKiB,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAE,IAAI,CAACT,KAAK,CAACS;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9C;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}