{"ast":null,"code":"var _jsxFileName = \"/Users/danielpopchenko/Desktop/react-lesson05-life-cycle/src/components/PhoneContacts/ContactsForm.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { error } from '@pnotify/core';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport '@pnotify/core/dist/PNotify.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n  cursor: pointer;\n  display: inline-block;\n  margin-top: 10px;\n  min-width: 120px;\n  height: 40px;\n  padding: 10px;\n  border: 1px solid black;\n  border-radius: 4px;\n`;\n_c = Button;\nconst StyledInput = styled.input`\n  display: block;\n  min-width: 150px;\n  height: 25px;\n  font-size: 17px;\n`;\n_c2 = StyledInput;\nexport default function ContactsForm(_ref) {\n  _s();\n  let {\n    contacts,\n    onAddContact\n  } = _ref;\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name === '' || number === '') {\n      alert('Enter contact number and name');\n      return;\n    }\n    onAddContact(name, number);\n    setName('');\n    setNumber('');\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setName(value);\n    setNumber(value);\n    contacts.map(contact => {\n      if (value === contact.name) {\n        error({\n          text: 'This name is already in your list!',\n          delay: 2000\n        });\n      }\n      if (contact.number === value) {\n        error({\n          text: 'This number is already in your list!',\n          delay: 2000\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter contact name\", /*#__PURE__*/_jsxDEV(StyledInput, {\n        onChange: handleChange,\n        value: name,\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter contact number\", /*#__PURE__*/_jsxDEV(StyledInput, {\n        type: \"tel\",\n        onChange: handleChange,\n        value: number,\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: \"Submit form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n// class OldContactsForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     const { name, number } = this.state;\n\n//     if (name === '' || number === '') {\n//       alert('Enter contact number and name');\n//       return;\n//     }\n\n//     this.props.onAddContact(name, number);\n//     this.setState({ name: '', number: '' });\n//   };\n\n//   handleChange = (e) => {\n//     const { name, value } = e.target;\n//     this.setState({\n//       [name]: value,\n//     });\n\n//     this.props.contacts.map((contact) => {\n//       if (value === contact.name) {\n//         error({\n//           text: 'This name is already in your list!',\n//           delay: 2000,\n//         });\n//       }\n\n//       if (contact.number === value) {\n//         error({\n//           text: 'This number is already in your list!',\n//           delay: 2000,\n//         });\n//       }\n//     });\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n//     return (\n//       <form>\n//         <label>\n//           Enter contact name\n//           <StyledInput\n//             onChange={this.handleChange}\n//             value={name}\n//             type=\"text\"\n//             name=\"name\"\n//             pattern=\"^[a-zA-Zа-яА-Я]+((['\n//             -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only\n//             letters, apostrophe, dash and spaces. For example Adrian, Jacob\n//             Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             required\n//           />\n//         </label>\n\n//         <label>\n//           Enter contact number\n//           <StyledInput\n//             type=\"tel\"\n//             onChange={this.handleChange}\n//             value={number}\n//             name=\"number\"\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             required\n//           />\n//         </label>\n\n//         <Button type=\"submit\" onClick={this.handleSubmit}>\n//           Submit form\n//         </Button>\n//       </form>\n//     );\n//   }\n// }\n_s(ContactsForm, \"mgYk2feJE7Nd8w88JvjzPww6GtA=\");\n_c3 = ContactsForm;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"ContactsForm\");","map":{"version":3,"names":["React","Component","styled","error","useState","jsxDEV","_jsxDEV","Button","button","_c","StyledInput","input","_c2","ContactsForm","_ref","_s","contacts","onAddContact","name","setName","number","setNumber","handleSubmit","e","preventDefault","alert","handleChange","value","target","map","contact","text","delay","children","onChange","type","pattern","title","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c3","$RefreshReg$"],"sources":["/Users/danielpopchenko/Desktop/react-lesson05-life-cycle/src/components/PhoneContacts/ContactsForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport { error } from '@pnotify/core';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport '@pnotify/core/dist/PNotify.css';\nimport { useState } from 'react';\n\nconst Button = styled.button`\n  cursor: pointer;\n  display: inline-block;\n  margin-top: 10px;\n  min-width: 120px;\n  height: 40px;\n  padding: 10px;\n  border: 1px solid black;\n  border-radius: 4px;\n`;\n\nconst StyledInput = styled.input`\n  display: block;\n  min-width: 150px;\n  height: 25px;\n  font-size: 17px;\n`;\n\nexport default function ContactsForm({ contacts, onAddContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (name === '' || number === '') {\n      alert('Enter contact number and name');\n      return;\n    }\n\n    onAddContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setName(value);\n    setNumber(value);\n\n    contacts.map((contact) => {\n      if (value === contact.name) {\n        error({\n          text: 'This name is already in your list!',\n          delay: 2000,\n        });\n      }\n\n      if (contact.number === value) {\n        error({\n          text: 'This number is already in your list!',\n          delay: 2000,\n        });\n      }\n    });\n  };\n\n  return (\n    <form>\n      <label>\n        Enter contact name\n        <StyledInput\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+((['\n      -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only\n      letters, apostrophe, dash and spaces. For example Adrian, Jacob\n      Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label>\n        Enter contact number\n        <StyledInput\n          type=\"tel\"\n          onChange={handleChange}\n          value={number}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <Button type=\"submit\" onClick={handleSubmit}>\n        Submit form\n      </Button>\n    </form>\n  );\n}\n\n// class OldContactsForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     const { name, number } = this.state;\n\n//     if (name === '' || number === '') {\n//       alert('Enter contact number and name');\n//       return;\n//     }\n\n//     this.props.onAddContact(name, number);\n//     this.setState({ name: '', number: '' });\n//   };\n\n//   handleChange = (e) => {\n//     const { name, value } = e.target;\n//     this.setState({\n//       [name]: value,\n//     });\n\n//     this.props.contacts.map((contact) => {\n//       if (value === contact.name) {\n//         error({\n//           text: 'This name is already in your list!',\n//           delay: 2000,\n//         });\n//       }\n\n//       if (contact.number === value) {\n//         error({\n//           text: 'This number is already in your list!',\n//           delay: 2000,\n//         });\n//       }\n//     });\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n//     return (\n//       <form>\n//         <label>\n//           Enter contact name\n//           <StyledInput\n//             onChange={this.handleChange}\n//             value={name}\n//             type=\"text\"\n//             name=\"name\"\n//             pattern=\"^[a-zA-Zа-яА-Я]+((['\n//             -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only\n//             letters, apostrophe, dash and spaces. For example Adrian, Jacob\n//             Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             required\n//           />\n//         </label>\n\n//         <label>\n//           Enter contact number\n//           <StyledInput\n//             type=\"tel\"\n//             onChange={this.handleChange}\n//             value={number}\n//             name=\"number\"\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             required\n//           />\n//         </label>\n\n//         <Button type=\"submit\" onClick={this.handleSubmit}>\n//           Submit form\n//         </Button>\n//       </form>\n//     );\n//   }\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}