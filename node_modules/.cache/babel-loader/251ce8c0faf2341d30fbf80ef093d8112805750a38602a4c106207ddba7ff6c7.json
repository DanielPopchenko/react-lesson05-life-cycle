{"ast":null,"code":"var _jsxFileName = \"/Users/danielpopchenko/Desktop/react-lesson05-life-cycle/src/components/TaskList/TaskList.js\";\nimport React from \"react\";\n// import \"./TaskList.css\";\nimport TaskListItem from \"./TaskListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = _ref => {\n  let {\n    tasks,\n    onRemoveTask,\n    onUpdateTask\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"TaskList\",\n    children: tasks.map(_ref2 => {\n      let {\n        id,\n        text,\n        completed\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(TaskListItem, {\n        text: text,\n        completed: completed\n        //! Когда надо передать больше чем просто событие,\n        //! мы оборачиваем функцию в анонимку\n        //! и передаем параметром то что нам надо.\n        //! когда происходит onClick вызывается эта функция\n        ,\n        onRemoveTask: () => onRemoveTask(id),\n        onUpdateTask: () => onUpdateTask(id)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskListItem","jsxDEV","_jsxDEV","TaskList","_ref","tasks","onRemoveTask","onUpdateTask","className","children","map","_ref2","id","text","completed","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/danielpopchenko/Desktop/react-lesson05-life-cycle/src/components/TaskList/TaskList.js"],"sourcesContent":["import React from \"react\";\n// import \"./TaskList.css\";\nimport TaskListItem from \"./TaskListItem\";\n\nconst TaskList = ({ tasks, onRemoveTask, onUpdateTask }) => {\n  return (\n    <ul className=\"TaskList\">\n      {tasks.map(({ id, text, completed }) => (\n        <TaskListItem\n          key={id}\n          text={text}\n          completed={completed}\n          //! Когда надо передать больше чем просто событие,\n          //! мы оборачиваем функцию в анонимку\n          //! и передаем параметром то что нам надо.\n          //! когда происходит onClick вызывается эта функция\n          onRemoveTask={() => onRemoveTask(id)}\n          onUpdateTask={() => onUpdateTask(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TaskList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGC,IAAA,IAA2C;EAAA,IAA1C;IAAEC,KAAK;IAAEC,YAAY;IAAEC;EAAa,CAAC,GAAAH,IAAA;EACrD,oBACEF,OAAA;IAAIM,SAAS,EAAC,UAAU;IAAAC,QAAA,EACrBJ,KAAK,CAACK,GAAG,CAACC,KAAA;MAAA,IAAC;QAAEC,EAAE;QAAEC,IAAI;QAAEC;MAAU,CAAC,GAAAH,KAAA;MAAA,oBACjCT,OAAA,CAACF,YAAY;QAEXa,IAAI,EAAEA,IAAK;QACXC,SAAS,EAAEA;QACX;QACA;QACA;QACA;QAAA;QACAR,YAAY,EAAEA,CAAA,KAAMA,YAAY,CAACM,EAAE,CAAE;QACrCL,YAAY,EAAEA,CAAA,KAAMA,YAAY,CAACK,EAAE;MAAE,GARhCA,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QASP;IAAA,CACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAET,CAAC;AAACC,EAAA,GAlBIhB,QAAQ;AAoBd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}