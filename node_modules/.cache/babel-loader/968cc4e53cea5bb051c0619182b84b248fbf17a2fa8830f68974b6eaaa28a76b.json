{"ast":null,"code":"var _jsxFileName = \"/Users/danielpopchenko/Desktop/react-lesson05-life-cycle/src/App.js\";\nimport React, { Component } from \"react\";\nimport Modal from \"./components/Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showModal: false\n    };\n  }\n  // Выполняется после вставки 1 елемента в дом дерево\n  componentDidMount() {}\n\n  // Вызывается перед рендером в обновлении\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    // Если возвращает false - компонент не рендерится\n    // По умолчанию --- true\n  }\n\n  // После обновления компонента\n  componentDidUpdate(prevProps, prevState) {}\n  render() {\n    const {\n      showModal\n    } = this.state;\n    console.log(\"App render\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Modal","jsxDEV","_jsxDEV","App","constructor","arguments","state","showModal","componentDidMount","shouldComponentUpdate","nextProps","nextState","nextContext","componentDidUpdate","prevProps","prevState","render","console","log","children","type","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/danielpopchenko/Desktop/react-lesson05-life-cycle/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Modal from \"./components/Modal/Modal\";\n\nexport default class App extends Component {\n  state = {\n    showModal: false,\n  };\n\n  // Выполняется после вставки 1 елемента в дом дерево\n  componentDidMount() {}\n\n  // Вызывается перед рендером в обновлении\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    // Если возвращает false - компонент не рендерится\n    // По умолчанию --- true\n  }\n\n  // После обновления компонента\n  componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    const { showModal } = this.state;\n    console.log(\"App render\");\n\n    return (\n      <div>\n        <button type=\"button\"></button>\n        {showModal && <Modal></Modal>}\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAAAK,YAAA;IAAA,SAAAC,SAAA;IAAA,KACzCC,KAAK,GAAG;MACNC,SAAS,EAAE;IACb,CAAC;EAAA;EAED;EACAC,iBAAiBA,CAAA,EAAG,CAAC;;EAErB;EACAC,qBAAqBA,CAACC,SAAS,EAAEC,SAAS,EAAEC,WAAW,EAAE;IACvD;IACA;EAAA;;EAGF;EACAC,kBAAkBA,CAACC,SAAS,EAAEC,SAAS,EAAE,CAAC;EAE1CC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAET;IAAU,CAAC,GAAG,IAAI,CAACD,KAAK;IAChCW,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAEzB,oBACEhB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAQkB,IAAI,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU,EAC9BjB,SAAS,iBAAIL,OAAA,CAACF,KAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}